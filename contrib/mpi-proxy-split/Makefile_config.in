# FIXME: We should eventually dynamically choose this address in setLhMemRange.
#        Then, we won't need this configure variable.
MANA_USE_LH_FIXED_ADDRESS = @MANA_USE_LH_FIXED_ADDRESS@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@

ifeq ($(findstring cori,$(PLATFORM)),cori)
  MPICC = cc
  MPICXX = CC
  MPI_LD_FLAG = -lmpich
  MPIRUN = srun
  MPI_CFLAGS?= -g3 -O0 -std=c99 -fPIC
  MPI_CXXFLAGS?= -g3 -O0 -std=c99 -fPIC
  MPI_LDFLAGS?= -dynamic
# This is needed, or else mana_coordinator.o becomes the default target.
default2: default
## On Cori at NERSC, MPICC is CC, which translates to icpc(ICC)-v19
## But this .o file will be linked with src/dmtcp_coordinator.o, which
##   is built with g++.  So, we use $(CXX) for compatibility.
## An alternative is to use -O2, which inlines calls to memcpy.
mana_coordinator.o: mana_coordinator.cpp
	${CXX} ${CXXFLAGS} `CC --cray-print-opts=cflags` -c -o $@ $<
else
  MPI_BIN = @MPI_BIN@
  MPI_LIB = @MPI_LIB@
  MPI_INCLUDE = @MPI_INCLUDE@
  MPICC = @MPICC@
  MPICXX = @MPICXX@
  MPIRUN = @MPIRUN@
  MPI_LD_FLAG = @MPI_LD_FLAG@
  MPI_CFLAGS?= @MPI_CFLAGS@
  MPI_CXXFLAGS?= @MPI_CXXFLAGS@
  MPI_LDFLAGS?= @MPI_LDFLAGS@
endif

# If you trust your MPI distro package, this is another option:
#   MPICC = mpicc
#   MPICXX = mpic++
#   MPIRUN = mpirun
#   MPI_LD_FLAG = -lmpi
#   MPI_CFLAGS?= -g3 -O0 -std=c99 -fPIC
#   MPI_CXXFLAGS?= -g3 -O0 -std=c99 -fPIC
#   MPI_LDFLAGS?=
